"""Add onboard_status table

Revision ID: afafec9f8416
Revises: c122d66179b6
Create Date: 2020-03-20 11:07:32.556507

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision = 'afafec9f8416'
down_revision = 'c122d66179b6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('onboard_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entity_type', sa.String(length=32), nullable=True),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )

    # op.create_foreign_key(None, 'network_service', 'onboard_status', ['current_onboard'], ['id'])
    # ### end Alembic commands ###

    # Commands for moving all data to a temporal table and back on sqlite
    op.get_bind().execute(text("""
        create table network_service_dg_tmp (
            id INTEGER not null primary key,
            user_id INTEGER references user(id),
            name VARCHAR(64),
            description VARCHAR(256),
            is_public BOOLEAN,
            vim_image VARCHAR(256),
            vim_location VARCHAR(64),
            nsd_file VARCHAR(256),
            nsd_id VARCHAR(256),
            vim_id VARCHAR(256),
            current_onboard INTEGER references onboard_status(id),
            check (is_public IN (0, 1))
        );
    """))

    op.get_bind().execute(text("insert into network_service_dg_tmp(id, user_id, name, description, is_public, vim_image, vim_location, nsd_file, nsd_id, vim_id) select id, user_id, name, description, is_public, vim_image, vim_location, nsd_file, nsd_id, vim_id from network_service;"))
    op.get_bind().execute(text("drop table network_service;"))
    op.get_bind().execute(text("alter table network_service_dg_tmp rename to network_service;"))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'network_service', type_='foreignkey')
    op.drop_table('onboard_status')
    # ### end Alembic commands ###
